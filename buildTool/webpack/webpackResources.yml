# app
app:
  packages: # TODO: Not sure if these should be here, or in zzfinish?
    - <<: *pkg_webpack
    - <<: *pkg_webpack-dev-server

buildAssets:
  packages:
    - <<: *pkg_file-loader

buildCSS:
  packages:
    - <<: *pkg_css-loader
    - <<: *pkg_style-loader
    - <<: *pkg_autoprefixer-loader   #TODO: Change to use PostCSS instead (as suggested by the package)

  sourceFormat:
    css:
      packages: []

    stylus:
      packages:
        - <<: *pkg_stylus-loader

    sass:
      packages:
        - <<: *pkg_sass-loader
        - <<: *pkg_node-sass

buildHTML:
  packages:
    - <<: *pkg_html-loader
    - <<: *pkg_html-webpack-plugin

buildJS:
  sourceFormat:
    ES6:
      packages:
        - <<: *pkg_babel-core
        - <<: *pkg_babel-runtime
        - <<: *pkg_babel-loader
        - <<: *pkg_babel-preset-es2015

    ES5:
      packages: []

    TypeScript:
      packages:
        - <<: *pkg_ts-loader


# README section for large blocks of static text
# TODO: Move these to appropriate tool sections (e.g. build, testUnit)
readme:
  extensionPoint:
    start: >
      `npm start` can be extended by modifying <%= link(paths.config.configDir + 'webpack/dev.webpack.config.js') %>
      and <%= link(paths.config.configDir + 'webpack/prod.webpack.config.js') %>. Confit will attempt to overwrite the contents
      files the next time `yo confit` is run, so make sure any modifications are committed to source control first.
    testUnit: >
      `npm test:unit` can be extended by modifying
      <%= link(paths.config.configDir + 'testUnit/karma.conf.js') %> and <%= link(paths.config.configDir + 'testUnit/karma.common.js') %>.
      <%= link(paths.config.configDir + 'testUnit/test.files.js') %> is generated from the entry points in the Confit configuration.
      It is **best** to modify the entry points in <%= link(configFile) %> then re-run `yo confit`.

# sampleApp configuration
sampleApp:
  js:
    framework:
      '':
        sampleDir: noFramework/
        vendorScripts: []
        typeLibs: []
        sourceFormat: {}

      AngularJS 1.x:
        sampleDir: ng1/
        vendorScripts:
          - <<: *pkg_angular-route
        testVendorScripts:
          - <<: *pkg_angular-route
        typeLibs:
          - name: angular-route
            key: ambientDependencies
            version: github:DefinitelyTyped/DefinitelyTyped/angularjs/angular-route.d.ts#cf172aab99c3139a718aa8e65398a22c53dd7ead
        sourceFormat: {}

      AngularJS 2.x:
        sampleDir: ng2/
        vendorScripts:
          - <<: *pkg_angular2/router
          - <<: *pkg_angular2/platform/browser
        typeLibs: []

        sourceFormat:
          TypeScript:
            testUnitConfig: |
              var testing = require('angular2/testing');
              var browser = require('angular2/platform/testing/browser');

              testing.setBaseTestProviders(
                browser.TEST_BROWSER_PLATFORM_PROVIDERS,
                browser.TEST_BROWSER_APPLICATION_PROVIDERS
              );
            vendorScripts:  # Generates adds the item to the vendor scripts
              pre:
                - './polyfills.ts'
              post: []

      React (latest):
        sampleDir: react/
        vendorScripts: []
        typeLibs: []
        sourceFormat: {}

  packages:
    - <<: *pkg_lodash


testUnit:
  packages:
    - <<: *pkg_karma
    - <<: *pkg_karma-chrome-launcher
    - <<: *pkg_karma-coverage
    - <<: *pkg_karma-jasmine
    - <<: *pkg_karma-junit-reporter
    - <<: *pkg_karma-ng-html2js-preprocessor   # TODO: Shouldn't this be conditional?
    - <<: *pkg_karma-phantomjs-launcher
    - <<: *pkg_karma-sourcemap-loader
    - <<: *pkg_karma-spec-reporter
    - <<: *pkg_karma-threshold-reporter
    - <<: *pkg_karma-webpack
    - <<: *pkg_jasmine-core
    - <<: *pkg_phantomjs
    - <<: *pkg_phantomjs-polyfill
    - <<: *pkg_istanbul-instrumenter-loader

  typeLibs:
    - name: jasmine
      key: ambientDependencies
      version: github:DefinitelyTyped/DefinitelyTyped/jasmine/jasmine.d.ts#4b36b94d5910aa8a4d20bdcd5bd1f9ae6ad18d3c

zzfinish:
  packages:
    - <<: *pkg_extract-text-webpack-plugin

  onEnd:
    cmd: npm
    args: ['start']
